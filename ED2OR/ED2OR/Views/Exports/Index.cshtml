@model ED2OR.ViewModels.ExportsViewModel

@{
    ViewBag.Title = "Exports";
    var schoolsCriteriaSection = Model.CriteriaSections.FirstOrDefault(x => x.SectionName == "Schools");
    var subjectsCriteriaSection = Model.CriteriaSections.FirstOrDefault(x => x.SectionName == "Subjects");
}

<style>
    .accordionHeader {
        width:100%;
        text-align: left;
    }

    .table td {
        white-space:nowrap;
    }

    
</style>

<h3>Data Selection</h3>

@*http://v4-alpha.getbootstrap.com/components/collapse/*@

@using (Html.BeginForm())
{
    @*<div id="criteriaContainer">
        @Html.EditorFor(x => x.CriteriaSections)
        <input type="submit" value="OK" />
    </div>*@
    <div id="criteriaContainer">
        @Html.Partial("_CriteriaSection", schoolsCriteriaSection)
        <div id="SubjectsContainer">@Html.Partial("_CriteriaSection", subjectsCriteriaSection)</div>       
         @*<div id="SubjectsContainer">@Html.Partial("_CriteriaSection", subjectsCriteriaSection, new ViewDataDictionary()
                               {
                                   TemplateInfo = new TemplateInfo()
                                   { HtmlFieldPrefix = "Subjects" }
                               })</div>*@

        <br />
        @if (Model.DataPreviewSections != null)
        {
            <br />
            <h3>Data Preview</h3>

            foreach (var previewSection in Model.DataPreviewSections)
            {
                <div class="btn btn-primary accordionHeader" data-toggle="collapse" href="#preview_@previewSection.SectionName">
                    @previewSection.SectionName
                </div>
                <div class="collapse" id="preview_@previewSection.SectionName">
                    @*<div class="table-responsive">
                        or put table-responsive in table class*@
                    <table id="table_@previewSection.SectionName" data-pagination="true" class="table table-striped table-bordered table-condensed">
                        <thead>
                            <tr>
                                @foreach (var col in previewSection.ColumnNames)
                                {
                                    <th data-field="@col">@col</th>
                                }
                            </tr>
                        </thead>
                    </table>
                </div>
            }
        }
        
        <br />
        <br />
        <button type="submit" class="btn btn-primary" id="btnPreview" name="Command" value="Preview">Preview Data</button>
        <button type="submit" class="btn btn-primary" id="btnDownload" name="Command" value="Download">Download CSV Package</button>
        <button type="submit" class="btn btn-primary" id="btnSaveTemplate" name="Command" value="SaveTemplate">Save Template</button> 
    </div>
}



@section scripts{
        <script>
            function deselectAll(divId) {
                $("#" + divId).find("input:checkbox").removeAttr("checked");
                $("#numSelected_" + divId).text("(0 selected)");
                if (divId == "Schools") {
                    schoolsChanged();
                }
                //checkboxRecount(divId);
            }

            function checkboxRecount(divId) {
                var numCheckedBoxes = $("#" + divId).find("input:checkbox:checked").length;
                var numTotalBoxes = $("#" + divId).find("input:checkbox").length;

                var txt = (numCheckedBoxes == numTotalBoxes && numTotalBoxes != 0) ? "(all selected)" : "(" + numCheckedBoxes + " selected)"
                $("#numSelected_" + divId).text(txt);
            }

            function getSchoolIds() {
                var divId = "Schools";
                var checkedBoxes = $("#" + divId).find("input:checkbox:checked");

                var arr = [];
                checkedBoxes.each(function () {
                    var $this = $(this);
                    arr.push($this.data('schoolid'));
                });
                return arr;
            }

            function getBoxesAlreadyChecked(divId) {
                var checkedBoxes = $("#" + divId).find("input:checkbox:checked");

                var arr = [];
                checkedBoxes.each(function () {
                    var $this = $(this);
                    var labelText = $('label[for=' + $this.attr('id') + ']').html();
                    arr.push(labelText);
                });
                return arr;
            }

            //function redrawCheckboxes(divId, stringArray) {
            //    var existingCheckBoxes = $("#" + divId).find("input:checkbox");

            //    existingCheckBoxes.each(function () {
            //        var $this = $(this);
            //        var labelText = $('label[for=' + $this.attr('id') + ']').html();
            //        //var labelText = label.html();
            //        if ($.inArray(labelText, stringArray) == -1) {
            //            $this.closest("span").remove();
            //            //label.remove();
            //            //$this.remove();
            //        }
            //        else { //http://stackoverflow.com/questions/866239/creating-the-checkbox-dynamically-using-javascript
            //        }
            //    });
            //}

            function schoolsChanged() {
                var schoolIds = getSchoolIds();
                var boxesAlreadyChecked = getBoxesAlreadyChecked("Subjects");

                //need to add callback function here because "load" is async
                $("#SubjectsContainer").load("@Url.Action("GetSubjectsPartial")", { schoolIds: schoolIds, boxesAlreadyChecked: boxesAlreadyChecked }, function () {
                    assignEvents();
                });


                @*var postData = { schoolIds: schoolIds };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetSubjectsCheckboxes")',
                    data: postData,
                    success: function (result) {
                        redrawCheckboxes("Subjects", result);
                    },
                    //error: function (err) {
                    //    alert('problem');
                    //},
                    dataType: "json",
                    traditional: true
                });*@
            }

            function assignEvents() {
                $('#criteriaContainer :checkbox').change(function () {
                    var parentDivId = $(this).parent("div").attr("id");
                    if (parentDivId == "Schools") {
                        schoolsChanged();
                    }
                    checkboxRecount(parentDivId);

                    //if ($(this).is(':checked')) {
                    //    console.log($(this).val() + ' is now checked');
                    //} else {
                    //    console.log($(this).val() + ' is now unchecked');
                    //}
                });
            }

            assignEvents();
        </script>

    @if (Model.DataPreviewSections != null)
    {
        <script>
            $(function () {
                var orgsData = @Html.Raw(Model.JsonPreviews.Orgs);
                $('#table_orgs').bootstrapTable({
                    data: orgsData
                });

                var usersData = @Html.Raw(Model.JsonPreviews.Users);
                $('#table_users').bootstrapTable({
                    data: usersData
                });

                var coursesData = @Html.Raw(Model.JsonPreviews.Courses);
                $('#table_courses').bootstrapTable({
                    data: coursesData
                });

                var classesData = @Html.Raw(Model.JsonPreviews.Classes);
                $('#table_classes').bootstrapTable({
                    data: classesData
                });

                var enrollmentsData = @Html.Raw(Model.JsonPreviews.Enrollments);
                $('#table_enrollments').bootstrapTable({
                    data: enrollmentsData
                });

                var academicsessions = @Html.Raw(Model.JsonPreviews.AcademicSessions);
                $('#table_academicsessions').bootstrapTable({
                    data: academicsessions
                });
            });
        </script>
    }

            

    }
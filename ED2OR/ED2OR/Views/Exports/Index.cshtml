@model ED2OR.ViewModels.ExportsViewModel

@{
    ViewBag.Title = "Exports";
}

<style>
    .accordionHeader {
        width:100%;
        text-align: left;
    }

    .table td {
        white-space:nowrap;
    }
</style>

<h3>Data Selection</h3>

@*http://v4-alpha.getbootstrap.com/components/collapse/*@

@*@using (Html.BeginForm())*@
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "exportsForm" }))
{
    @Html.HiddenFor(x => x.SelectedSchools)
    @Html.HiddenFor(x => x.SelectedSchoolYears)
    @Html.HiddenFor(x => x.SelectedTerms)
    @Html.HiddenFor(x => x.SelectedSubjects)
    @Html.HiddenFor(x => x.SelectedCourses)
    @Html.HiddenFor(x => x.SelectedTeachers)
    @Html.HiddenFor(x => x.SelectedSections)

    @*<div id="criteriaContainer">
        @Html.EditorFor(x => x.CriteriaSections)
        <input type="submit" value="OK" />
    </div>*@
    @Html.Partial("_CriteriaSection", Model.SchoolsCriteriaSection, new ViewDataDictionary()
        {
            TemplateInfo = new TemplateInfo()
            { HtmlFieldPrefix = "Schools" }
        })

    @Html.Partial("_CriteriaSection", Model.SchoolYearsCriteriaSection, new ViewDataDictionary()
        {
            TemplateInfo = new TemplateInfo()
            { HtmlFieldPrefix = "School_Years" }
        })

    @Html.Partial("_CriteriaSection", Model.TermsCriteriaSection, new ViewDataDictionary()
    {
        TemplateInfo = new TemplateInfo()
        { HtmlFieldPrefix = "Terms" }
    })

    <div id="SubjectsContainer">
        @Html.Partial("_CriteriaSection", Model.SubjectsCriteriaSection, new ViewDataDictionary()
            {
                TemplateInfo = new TemplateInfo()
                { HtmlFieldPrefix = "Subjects" }
            })
    </div>

    <div id="CoursesContainer">
        @Html.Partial("_CriteriaSection", Model.CoursesCriteriaSection, new ViewDataDictionary()
            {
                TemplateInfo = new TemplateInfo()
                { HtmlFieldPrefix = "Courses" }
            })
    </div>

    <div id="TeachersContainer">
        @Html.Partial("_CriteriaSection", Model.TeachersCriteriaSection, new ViewDataDictionary()
            {
                TemplateInfo = new TemplateInfo()
                { HtmlFieldPrefix = "Teachers" }
            })
    </div>

    <div id="SectionsContainer">
        @Html.Partial("_CriteriaSection", Model.SectionsCriteriaSection, new ViewDataDictionary()
            {
                TemplateInfo = new TemplateInfo()
                { HtmlFieldPrefix = "Sections" }
            })
    </div>

    <br />
    <div id="DataPreview"></div>
    <br />
    <br />
    <button type="button" class="btn btn-primary" onclick="dataPreview()">Preview Data</button>
    @*<button type="submit" class="btn btn-primary" id="btnPreview" name="Command" value="Preview">Preview Data</button>*@
    <button type="button" class="btn btn-primary" onclick="downloadCsv()">Download CSV Package</button>
    @*<button type="submit" class="btn btn-primary" id="btnDownload" name="Command" value="Download">Download CSV Package</button>*@
    <button type="submit" class="btn btn-primary" id="btnSaveTemplate" disabled name="Command" value="SaveTemplate">Save Template</button> 
}


@section scripts{
        <script>
            function deselectAll(divId) {
                $("#" + divId).find("input:checkbox").removeAttr("checked");
                $("#numSelected_" + divId).text("(0 selected)");
                if (divId == "Schools" || parentDivId == "School_Years" || parentDivId == "Terms") {
                    topGroupChanged();
                }
                //checkboxRecount(divId);
            }

            function checkboxRecount(divId) {
                var numCheckedBoxes = $("#" + divId).find("input:checkbox:checked").length;
                var numTotalBoxes = $("#" + divId).find("input:checkbox").length;

                var txt = (numCheckedBoxes == numTotalBoxes && numTotalBoxes != 0) ? "(all selected)" : "(" + numCheckedBoxes + " selected)"
                $("#numSelected_" + divId).text(txt);
            }

            function getCheckedIds(divId) {
                var checkedBoxes = $("#" + divId).find("input:checkbox:checked");

                var arr = [];
                checkedBoxes.each(function () {
                    var $this = $(this);
                    arr.push($this.data('filterid'));
                });
                return arr;
            }

            function getBoxesAlreadyChecked(divId) {
                var checkedBoxes = $("#" + divId).find("input:checkbox:checked");

                var arr = [];
                checkedBoxes.each(function () {
                    var $this = $(this);
                    var labelText = $('label[for=' + $this.attr('id') + ']').html();
                    arr.push(labelText);
                });
                return arr;
            }

            function topGroupChanged() {
                var schoolIds = getCheckedIds("Schools");
                var schoolYears = getCheckedIds("School_Years");
                var terms = getCheckedIds("Terms");

                var subjectsAlreadyChecked = getBoxesAlreadyChecked("Subjects");
                var coursesAlreadyChecked = getBoxesAlreadyChecked("Courses");
                var teachersAlreadyChecked = getBoxesAlreadyChecked("Teachers");

                $("#SubjectsContainer").load("@Url.Action("GetSubjectsPartial")", {
                    schoolIds: schoolIds,
                    schoolYears: schoolYears,
                    terms: terms,
                    boxesAlreadyChecked: subjectsAlreadyChecked });

                $("#CoursesContainer").load("@Url.Action("GetCoursesPartial")", {
                    schoolIds: schoolIds,
                    schoolYears: schoolYears,
                    terms: terms,
                    boxesAlreadyChecked: coursesAlreadyChecked });

                $("#TeachersContainer").load("@Url.Action("GetTeachersPartial")", {
                    schoolIds: schoolIds,
                    schoolYears: schoolYears,
                    terms: terms,
                    boxesAlreadyChecked: teachersAlreadyChecked });

                @*var postData = { schoolIds: schoolIds };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetSubjectsCheckboxes")',
                    data: postData,
                    success: function (result) {
                        redrawCheckboxes("Subjects", result);
                    },
                    //error: function (err) {
                    //    alert('problem');
                    //},
                    dataType: "json",
                    traditional: true
                });*@
            }

            function checkboxChanged(that) {
                var parentDivId = $(that).parent("div").attr("id");
                if (parentDivId == "Schools" || parentDivId == "School_Years" || parentDivId == "Terms") {
                    topGroupChanged();
                }
                checkboxRecount(parentDivId);

                //if ($(this).is(':checked')) {
                //    console.log($(this).val() + ' is now checked');
                //} else {
                //    console.log($(this).val() + ' is now unchecked');
                //}
            }

            function dataPreview() {
                //need to make sure all collapsables are initialized.  Then trigger collapse/hide all
                //$('.accordionHeader').collapse({
                //    toggle: false
                //});
                //$('.collapse').collapse('hide');
                //$('.collapse').collapse('hide');

                //var isExpanded = !$(".accordionHeader").hasClass("expanded");
                //$(".accordionHeader").toggleClass("expanded", isExpanded);
                //if ($("div.inbox").hasClass("in")) {
                //    $("div.inbox").collapse('hide');
                //}

                var schoolIds = getCheckedIds("Schools");
                var schoolYears = getCheckedIds("School_Years");
                var terms = getCheckedIds("Terms");
                var subjects = getCheckedIds("Subjects");
                var courses = getCheckedIds("Courses");
                var teachers = getCheckedIds("Teachers");
                var sections = getCheckedIds("Sections");

                $("#DataPreview").load("@Url.Action("Preview")", {
                    schoolIds: schoolIds,
                    schoolYears: schoolYears,
                    terms: terms,
                    subjects: subjects,
                    courses: courses,
                    teachers: teachers,
                    sections: sections,
                });
            }

            function downloadCsv() {
                var schoolIds = getCheckedIds("Schools");
                var schoolYears = getCheckedIds("School_Years");
                var terms = getCheckedIds("Terms");
                var subjects = getCheckedIds("Subjects");
                var courses = getCheckedIds("Courses");
                var teachers = getCheckedIds("Teachers");
                var sections = getCheckedIds("Sections");

                $("#@Html.IdFor(x => x.SelectedSchools)").val(schoolIds);
                $("#@Html.IdFor(x => x.SelectedSchoolYears)").val(schoolYears);
                $("#@Html.IdFor(x => x.SelectedTerms)").val(terms);
                $("#@Html.IdFor(x => x.SelectedSubjects)").val(subjects);
                $("#@Html.IdFor(x => x.SelectedCourses)").val(courses);
                $("#@Html.IdFor(x => x.SelectedTeachers)").val(teachers);
                $("#@Html.IdFor(x => x.SelectedSections)").val(sections);

                document.getElementById('exportsForm').submit();
            }
        </script>
    }

  